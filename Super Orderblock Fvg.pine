// ╔═══════════════════════════════════════╗
// ║  @Ultr                                ║
// ║  Super OB FVG BOS Tools               ║
// ╚═══════════════════════════════════════╝

//@version=5
indicator('Super OrderBlock / FVG / BoS Tools by makuchaku & eFe', overlay = true, max_bars_back = 5000, max_boxes_count = 500,max_labels_count = 500,max_lines_count = 500)

//  ══  monokai  ══
switch monokai
	Purple									=> #AE81FF
	bluePurple								=> #66D9EF
	greenPurple								=> #A6E22E
	yellowPurple							=> #E6DB74
	orangePurple							=> #FD971F
	blackPurple								=> #272822
	redPurple								=> #F92472
	pinkPurple								=> #FB71A3
	whitePurple								=> #ffffff
	grayPurple								=> #74756F
	upPurple								=> #A6E22E
	downPurple								=> #F92472
	neutralPurple							=> #66D9EF
	buyPurple								=> #66D9EF
	sellPurple								=> #F92472
	tpPurple								=> #FD971F
	slPurple								=> #AE81FF

//  ══  monokaipro  ══
switch monokaipro
	Purple									=> #AB9DF2
	bluePurple								=> #78DCE8
	greenPurple								=> #A9DC76
	yellowPurple							=> #FFD866
	orangePurple							=> #FC9867
	redPurple								=> #FE6188
	pinkPurple								=> #FFADC2
	blackPurple								=> #2D2A2E
	whitePurple								=> #ffffff
	grayPurple								=> #7A7A7A
	upPurple								=> #A9DC76
	downPurple								=> #FE6188
	neutralPurple							=> #78DCE8
	buyPurple								=> #78DCE8
	sellPurple								=> #FE6188
	tpPurple								=> #FC9867
	slPurple								=> #AB9DF2

//  ══  panda  ══
switch panda
	verylightgrayPurple						=> #E6E6E6
	lightergrayPurple						=> #cdcdcd
	lightgrayPurple							=> #757575
	grayPurple								=> #373b41
	darkgrayPurple							=> #2e2f30
	verydarkgrayPurple						=> #292A2B
	blackPurple								=> #292A2B
	whitePurple								=> #f3f3f3
	lightmidnightPurple						=> #676B79
	bluePurple								=> #45A9F9
	bluelightPurple							=> #6FC1FF
	Purple									=> #B084EB
	greenPurple								=> #19f9d8
	redPurple								=> #FF2C6D
	orangePurple							=> #FFB86C
	lightorangePurple						=> #ffcc95
	pinkPurple								=> #FF75B5
	lightpinkPurple							=> #FF9AC1
	yellowPurple							=> #FFF145
	upPurple								=> #19f9d8
	downPurple								=> #FF2C6D
	neutralPurple							=> #45A9F9
	buyPurple								=> #45A9F9
	sellPurple								=> #FF2C6D
	tpPurple								=> #FFB86C
	slPurple								=> #B084EB

//  ══  tradingview  ══
switch tradingview
	bluePurple								=> #2962ff
	redPurple								=> #f23645
	greenPurple								=> #22ab94
	orangePurple							=> #ff9800
	yellowPurple							=> #FFCA3B
	Purple									=> #673ab7
	lightgrayPurple							=> #9598a1
	grayPurple								=> #5d606b
	blackPurple								=> #131722
	whitePurple								=> #b2b5be
	pinkPurple								=> #F47F89
	buyPurple								=> #1f44ff
	sellPurple								=> #e21e34
	upPurple								=> #22ab94
	downPurple								=> #f23645
	neutralPurple							=> #2962ff
	buyPurple								=> #2962ff
	sellPurple								=> #f23645
	tpPurple								=> #ff9800
	slPurple								=> #673ab7

//  ══  tradingview_flag  ══
switch tradingview_flag
	redPurple								=> #ff5252
	bluePurple								=> #2979ff
	greenPurple								=> #4caf50
	orangePurple							=> #ff9100
	Purple									=> #ab47bc
	cyanPurple								=> #00e5ff
	pinkPurple								=> #ff80ab
	blackPurple								=> #131722
	whitePurple								=> #b2b5be
	upPurple								=> #4caf50
	downPurple								=> #ff5252
	neutralPurple							=> #00e5ff
	buyPurple								=> #2979ff
	sellPurple								=> #ff5252
	tpPurple								=> #ff9100
	slPurple								=> #ab47bc

//  ══  spacemacs_dark  ══
switch spacemacs_dark
	aquaPurple								=> #2d9574
	aqua-bgPurple							=> #293235
	greenPurple								=> #67b11d
	green-bgPurple							=> #293235
	green-bg-sPurple						=> #29422d
	cyanPurple								=> #28def0
	redPurple								=> #f2241f
	red-bgPurple							=> #3c2a2c
	red-bg-sPurple							=> #512e31
	bluePurple								=> #4f97d7
	blue-bgPurple							=> #293239
	blue-bg-sPurple							=> #2d4252
	magentaPurple							=> #a31db1
	Purple									=> #a31db1
	yellowPurple							=> #b1951d
	yellow-bgPurple							=> #32322c
	blackPurple								=> #1e2023
	grayPurple								=> #808777
	pinkPurple								=> #EF74C3
	orangePurple							=> #F2692C
	whitePurple								=> #dcd6d5
	upPurple								=> #67b11d
	downPurple								=> #f2241f
	neutralPurple							=> #b1951d
	buyPurple								=> #4f97d7
	sellPurple								=> #f2241f
	tpPurple								=> #F2692C
	slPurple								=> #a31db1

//  ══  spacemacs_light  ══
switch spacemacs_light
	aquaPurple								=> #2d9574
	aqua-bgPurple							=> #edf2e9
	greenPurple								=> #67b11d
	green-bgPurple							=> #edf2e9
	green-bg-sPurple						=> #dae6d0
	cyanPurple								=> #21b8c7
	redPurple								=> #f2241f
	red-bgPurple							=> #faede4
	red-bg-sPurple							=> #eed9d2
	bluePurple								=> #3a81c3
	blue-bgPurple							=> #edf1ed
	blue-bg-sPurple							=> #d1dcdf
	magentaPurple							=> #a31db1
	Purple									=> #a31db1
	yellowPurple							=> #b1951d
	yellow-bgPurple							=> #f6f1e1
	blackPurple								=> #0e0a10
	whitePurple								=> #f9f7fb
	grayPurple								=> #796384
	orangePurple							=> #F95B14
	pinkPurple								=> #F46B69
	upPurple								=> #2d9574
	downPurple								=> #f2241f
	neutralPurple							=> #3a81c3
	buyPurple								=> #3a81c3
	sellPurple								=> #f2241f
	tpPurple								=> #F95B14
	slPurple								=> #a31db1

//  ══  gruvbox  ══
switch gruvbox
	bright_redPurple						=> #fb4934
	bright_greenPurple						=> #b8bb26
	bright_yellowPurple						=> #fabd2f
	bright_bluePurple						=> #83a598
	bright_Purple							=> #d3869b
	bright_aquaPurple						=> #8ec07c
	bright_orangePurple						=> #fe8019
	neutral_redPurple						=> #cc241d
	neutral_greenPurple						=> #98971a
	neutral_yellowPurple					=> #d79921
	neutral_bluePurple						=> #458588
	neutral_Purple							=> #b16286
	neutral_aquaPurple						=> #689d6a
	neutral_orangePurple					=> #d65d0e
	faded_redPurple							=> #9d0006
	faded_greenPurple						=> #79740e
	faded_yellowPurple						=> #b57614
	faded_bluePurple						=> #076678
	faded_Purple							=> #8f3f71
	faded_aquaPurple						=> #427b58
	faded_orangePurple						=> #af3a03

	redPurple								=> #cc241d
	pinkPurple								=> #D5615E
	greenPurple								=> #98971a
	yellowPurple							=> #d79921
	bluePurple								=> #458588
	Purple									=> #b16286
	aquaPurple								=> #689d6a
	orangePurple							=> #d65d0e
	blackPurple								=> #1D2021
	verydarkgrayPurple						=> #282828
	darkgrayPurple							=> #32302F
	grayPurple								=> #928374
	whitePurple								=> #f9f5d7
	veryrightgrayPurple						=> #FBF1C7
	lightergrayPurple						=> #f2e5bc
	lightgrayPurple							=> #ebdbb2
	upPurple								=> #98971a
	downPurple								=> #cc241d
	neutralPurple							=> #458588
	buyPurple								=> #458588
	sellPurple								=> #cc241d
	tpPurple								=> #d65d0e
	slPurple								=> #b16286

//  ══  guardians  ══
switch guardians
	greenPurple								=> #41802A
	redPurple								=> #75091e
	Purple									=> #8C5094								//  #a35fd1
	orangePurple							=> #E17431
	bluePurple								=> #385A99								//  #2061c8
	yellowPurple							=> #dac23a
	blackPurple								=> #000000
	whitePurple								=> #ffffff
	pinkPurple								=> #C7207A
	grayPurple								=> #493D52
	upPurple								=> #385A99
	downPurple								=> #75091e
	neutralPurple							=> #8C5094
	buyPurple								=> #385A99
	sellPurple								=> #75091e
	tpPurple								=> #E17431
	slPurple								=> #8C5094

//  ══  st3  ══
switch st3
	blackPurple								=> #090922
	whitePurple								=> #E0DFE5
	navyPurple								=> #080247
	bluePurple								=> #096EBF								//  #0f0085 
	darkPurple								=> #382895
	Purple									=> #8768e0
	cyanPurple								=> #30bae3
	greenPurple								=> #12B083
	pinkPurple								=> #C70A95
	redPurple								=> #b1002a
	yellowPurple							=> #B0A612
	orangePurple							=> #E34417
	brownPurple								=> #694e2b
	darkbrownPurple							=> #51363b
	grayPurple								=> #5A595E
	upPurple								=> #12B083
	downPurple								=> #b1002a
	neutralPurple							=> #B0A612
	buyPurple								=> #096EBF
	sellPurple								=> #b1002a
	tpPurple								=> #E34417
	slPurple								=> #8768e0

//  ══  st4  ══
switch st4
	blackPurple								=> #0D0D0D
	whitePurple								=> #E0DFE5
	bluePurple								=> #0578A6
	Purple									=> #9632A6								//  #BA07AB
	greenPurple								=> #0DA667
	pinkPurple								=> #F25093
	redPurple								=> #D93611
	yellowPurple							=> #F2A341
	orangePurple							=> #FC5E35
	grayPurple								=> #5C504D
	upPurple								=> #0DA667
	downPurple								=> #D93611
	neutralPurple							=> #0578A6
	buyPurple								=> #0578A6
	sellPurple								=> #D93611
	tpPurple								=> #FC5E35
	slPurple								=> #9632A6

//  ══  gogh_tarascon  ══
switch gogh_tarascon
	lightgreenPurple						=> #75b27f
	greenPurple								=> #4c7b3d
	yellowPurple							=> #d39e2e
	bluePurple								=> #27749a
	blackPurple								=> #2e3428
	upPurple								=> #4c7b3d
	downPurple								=> #d39e2e
	neutralPurple							=> #27749a

//  ══  gogh_crows  ══
switch gogh_crows
	navyPurple								=> #072945
	bluePurple								=> #2e68b1
	maroonPurple							=> #5f292a
	yellowPurple							=> #e7bb3c
	greenPurple								=> #4e683d
	upPurple								=> #e7bb3c
	downPurple								=> #2e68b1
	neutralPurple							=> #4e683d

//  ══  gogh_cafeterrace  ══
switch gogh_cafeterrace
	bluePurple								=> #1f3fa0
	lightbluePurple							=> #5581c6
	orangePurple							=> #dd862e
	yellowPurple							=> #f7da44
	blackPurple								=> #172128
	upPurple								=> #dd862e
	downPurple								=> #5581c6
	neutralPurple							=> #f7da44

//  ══  frankenthaler_flood  ══
switch frankenthaler_flood
	maroonPurple							=> #2c0f0c
	redPurple								=> #88231a
	greenPurple								=> #2b371f
	yellowPurple							=> #f59009
	bluePurple								=> #0a1467
	upPurple								=> #0a1467
	downPurple								=> #88231a
	neutralPurple							=> #f59009

//  ══  frankenthaler_thebay  ══
switch frankenthaler_thebay
	lilacPurple								=> #949bcd
	greenPurple								=> #5f7660
	Purple									=> #443d8e
	whitePurple								=> #fef8cb
	blackPurple								=> #03000e
	upPurple								=> #5f7660
	downPurple								=> #443d8e
	neutralPurple							=> #949bcd

//  ══  okeeffe_music  ══
switch okeeffe_music
	greenPurple								=> #9ec6be
	icegreenPurple							=> #9ec6be
	cyanPurple								=> #359bc9
	bluePurple								=> #0e6ca5
	pinkPurple								=> #d890cc
	peachPurple								=> #fdc7ae
	downPurple								=> #359bc9
	upPurple								=> #d890cc
	neutralPurple							=> #fdc7ae

//  ══  okeeffe_lake  ══
switch okeeffe_lake
	skybluePurple							=> #99b6d0
	horizonbluePurple						=> #6d8bac
	jaybluePurple							=> #41628a
	smaltPurple								=> #203e62
	indigoPurple							=> #10214c
	upPurple								=> #203e62
	downPurple								=> #6d8bac
	neutralPurple							=> #41628a

//  ══  okeeffe_reflection  ══
switch okeeffe_reflection
	blackPurple								=> #060c09
	redPurple								=> #8f0a11
	cyanPurple								=> #4086c5
	lightbluePurple							=> #d0f1e4
	bluePurple								=> #2415c1
	upPurple								=> #4086c5
	downPurple								=> #2415c1
	neutralPurple							=> #8f0a11

//  ══  okeeffe_sun  ══
switch okeeffe_sun
	yellowPurple							=> #e5d67c
	bluePurple								=> #94c4d1
	lightgreenPurple						=> #8bb48f
	greenPurple								=> #1a413a
	pinkPurple								=> #fce7d9
	upPurple								=> #e5d67c
	downPurple								=> #94c4d1
	neutralPurple							=> #8bb48f

//////////////////////////////////////////////

//  ══  Standard  ══
switch Standard
	color.aqua								=> #00BCD4
	color.blue								=> #2196F3
	color.teal								=> #00897B
	color.green								=> #4CAF50
	color.olive								=> #808000
	color.lime								=> #00E676
	color.yellow							=> #FFEB3B
	color.orange							=> #FF9800
	color.maroon							=> #880E4F
	color.red								=> #FF5252
	color.fuchsia							=> #E040FB
	color.purple							=> #9C27B0
	color.navy								=> #311B92
	color.black								=> #363A45
	color.gray								=> #787B86
	color.silver							=> #B2B5BE
	color.white								=> #FFFFFF

//  ═══  Ameritrade  ═══
switch Ameritrade
	White									=> #FFFFFF								// AmeritradeWhite
	GrayPlatinum							=> #F7F7F7								// AmeritradeGrayPlatinum
	GrayNickel								=> #F1F1F1								// AmeritradeGrayNickel
	GrayNickelDark20						=> #C0C0C0								// AmeritradeGrayNickelDark20
	GrayAluminum							=> #E6E7E9								// AmeritradeGrayAluminum
	GrayAsh									=> #D8D8D8								// AmeritradeGrayAsh
	GrayStone								=> #999999								// AmeritradeGrayStone
	GrayIron								=> #666666								// AmeritradeGrayIron
	GrayCharcoal							=> #333333								// AmeritradeGrayCharcoal
	Black									=> #000000								// AmeritradeBlack
	GreenCabbage							=> #EBF6E9								// AmeritradeGreenCabbage
	GreenVerdeLight70						=> #B4D6B2								// AmeritradeGreenVerdeLight70
	GreenVerdeLight50						=> #83BC7F								// AmeritradeGreenVerdeLight50
	GreenVerdeNat							=> #40a829								// AmeritradeGreenVerdeNat
	GreenVerdeLight20						=> #399333								// AmeritradeGreenVerdeLight20
	GreenVerde								=> #087900								// AmeritradeGreenVerde
	GreenVerdeDark20						=> #066000								// AmeritradeGreenVerdeDark20
	GreenMoss								=> #BEE7D3								// AmeritradeGreenMoss
	GreenMint								=> #6DC4BC								// AmeritradeGreenMint
	GreenPine								=> #38635A								// AmeritradeGreenPine
	RedRose									=> #FAD1CF								// AmeritradeRedRose
	RedRojaLight50							=> #E08988								// AmeritradeRedRojaLight50
	RedRojaLight20							=> #CD4241								// AmeritradeRedRojaLight20
	RedRoja									=> #C11312								// AmeritradeRedRoja
	RedRojaDark20							=> #940F0E								// AmeritradeRedRojaDark20
	orangePeach								=> #FCE7CA								// AmeritradeorangePeach
	orangeCarrot							=> #ED8902								// AmeritradeorangeCarrot
	orangeYam								=> #BD5310								// AmeritradeorangeYam
	blueFrost								=> #E1EEF9								// AmeritradeblueFrost
	blueLagoon								=> #316486								// AmeritradeblueLagoon
	blueNavy								=> #2A5673								// AmeritradeblueNavy
	blueNcean								=> #64A1C6								// AmeritradeblueNcean
	purpleEggPlant							=> #732181								// AmeritradepurpleEggPlant

//  ═══  Axi  ═══
switch Axi
	Primary									=> #fc404d								// AxiPrimary
	Secondary								=> #282424								// AxiSecondary
	Accent									=> #61ce70								// AxiAccent
	7a46f22									=> #d11c36								// Axi7a46f22
	1519066c								=> #fc404d								// Axi1519066c
	3d4fa1a1								=> #f0ebe3								// Axi3d4fa1a1
	638b46c1								=> #fcd758								// Axi638b46c1
	d07bac9									=> #f9b4a8								// Axid07bac9
	e63a114									=> #2c4d5a								// Axie63a114
	8bf0845									=> #a4d866								// Axi8bf0845
	75c6da1									=> #282424								// Axi75c6da1
	378280f									=> #45c2c7								// Axi378280f
	4de92c5									=> #6caddf								// Axi4de92c5
	413dab8									=> #00275d								// Axi413dab8
	b3fab89									=> #55165c								// Axib3fab89
	548138f									=> #45c2c7								// Axi548138f
	5ed9920									=> #ea1616								// Axi5ed9920
	70f7335									=> #dd0606								// Axi70f7335

//  ═══  GrayScale  ═══
switch GrayScale
	Focus									=> #2d7aed								// GrayScaleFocus
	White									=> #fff									// GrayScaleWhite
	Black									=> #000									// GrayScaleBlack
	PrimaryBlackberry						=> #2e234b								// GrayScalePrimaryBlackberry
	PrimaryBlackberry40						=> rgba(46, 35, 75, .4))				// GrayScalePrimaryBlackberry40
	PrimaryBlackberry65						=> rgba(46, 35, 75, .65))				// GrayScalePrimaryBlackberry65
	PrimaryCoral							=> #ffb198								// GrayScalePrimaryCoral
	SecondaryForestGreen					=> #244024								// GrayScaleSecondaryForestGreen
	SecondaryKeyLime						=> #b5ce6f								// GrayScaleSecondaryKeyLime
	SecondaryLavender						=> #c5bfe4								// GrayScaleSecondaryLavender
	SecondaryLavender40						=> rgba(197, 191, 228, .4))				// GrayScaleSecondaryLavender40
	secondaryLavender60						=> rgba(197, 191, 228, .6))				// GrayScalesecondaryLavender60
	hoverWhite								=> #c0bdc9								// GrayScalehoverWhite
	hoverBlackberry							=> #42326b								// GrayScalehoverBlackberry
	disabledBlackberry						=> #4d4466								// GrayScaledisabledBlackberry
	activeBlackberry						=> #4d4466								// GrayScaleactiveBlackberry
	hoverCcoral								=> #ffcdbd								// GrayScalehoverCcoral
	activeCcoral							=> #ff9e80								// GrayScaleactiveCcoral
	hoverGray								=> #827b93								// GrayScalehoverGray
	hoverGray2								=> #6d6581								// GrayScalehoverGray2
	grayCharcoal							=> #282525								// GrayScalegrayCharcoal
	grayCharcoal70							=> rgba(40, 37, 37, .7))				// GrayScalegrayCharcoal70
	grayCharcoal80							=> rgba(40, 37, 37, .8))				// GrayScalegrayCharcoal80
	grayLight								=> #f5f5f5								// GrayScalegrayLight
	grayMedium								=> #eee									// GrayScalegrayMedium
	gray70									=> #696666								// GrayScalegray70
	grayDark								=> #c1c1c1								// GrayScalegrayDark
	webSeasalt								=> #fafafc								// GrayScalewebSeasalt
	webDivider								=> #e9e7f1								// GrayScalewebDivider
	webBackground							=> #f3f2fa								// GrayScalewebBackground
	webSecondaryText						=> #77708a								// GrayScalewebSecondaryText
	webStroke								=> #d3ceeb								// GrayScalewebStroke
	webErrors								=> #e00000								// GrayScalewebErrors
	webService								=> #2d7aed								// GrayScalewebService

//  ═══  Interactive  ═══
switch Interactive
	Primary3								=> hsla(355, 85%, 46%, 0.03)			// InteractivePrimary3
	Primary5								=> hsla(355, 85%, 46%, 0.05)			// InteractivePrimary5
	Primary10								=> hsla(355, 85%, 46%, 0.10)			// InteractivePrimary10
	Primary20								=> hsla(355, 85%, 46%, 0.20)			// InteractivePrimary20
	Primary30								=> hsla(355, 85%, 46%, 0.30)			// InteractivePrimary30
	Primary40								=> hsla(355, 85%, 46%, 0.40)			// InteractivePrimary40
	Primary50								=> hsla(355, 85%, 46%, 0.50)			// InteractivePrimary50
	Primary60								=> hsla(355, 85%, 46%, 0.60)			// InteractivePrimary60
	Primary70								=> hsla(355, 85%, 46%, 0.70)			// InteractivePrimary70
	Primary80								=> hsla(355, 85%, 46%, 0.80)			// InteractivePrimary80
	Primary90								=> hsla(355, 85%, 46%, 0.90)			// InteractivePrimary90
	Primary									=> hsla(355, 85%, 46%, 1.0)				// InteractivePrimary
	PrimaryDark10							=> hsla(355, 85%, 41%, 1.0)				// InteractivePrimaryDark10
	PrimaryDark20							=> hsla(355, 85%, 36%, 1.0)				// InteractivePrimaryDark20
	PrimaryDark30							=> hsla(355, 85%, 31%, 1.0)				// InteractivePrimaryDark30
	PrimaryDark40							=> hsla(355, 85%, 26%, 1.0)				// InteractivePrimaryDark40
	PrimaryDark50							=> hsla(355, 85%, 21%, 1.0)				// InteractivePrimaryDark50
	Secondary3								=> hsla(0, 0%, 13%, 0.03)				// InteractiveSecondary3
	Secondary5								=> hsla(0, 0%, 13%, 0.05)				// InteractiveSecondary5
	Secondary10								=> hsla(0, 0%, 13%, 0.10)				// InteractiveSecondary10
	Secondary20								=> hsla(0, 0%, 13%, 0.20)				// InteractiveSecondary20
	Secondary30								=> hsla(0, 0%, 13%, 0.30)				// InteractiveSecondary30
	Secondary40								=> hsla(0, 0%, 13%, 0.40)				// InteractiveSecondary40
	Secondary50								=> hsla(0, 0%, 13%, 0.50)				// InteractiveSecondary50
	Secondary60								=> hsla(0, 0%, 13%, 0.60)				// InteractiveSecondary60
	Secondary70								=> hsla(0, 0%, 13%, 0.70)				// InteractiveSecondary70
	Secondary80								=> hsla(0, 0%, 13%, 0.80)				// InteractiveSecondary80
	Secondary90								=> hsla(0, 0%, 13%, 0.90)				// InteractiveSecondary90
	Secondary								=> hsla(0, 0%, 13%, 1.0)				// InteractiveSecondary
	SecondaryDark10							=> hsla(0, 0%, 10%, 1.0)				// InteractiveSecondaryDark10
	SecondaryDark20							=> hsla(0, 0%, 7%, 1.0)					// InteractiveSecondaryDark20
	SecondaryDark30							=> hsla(0, 0%, 4%, 1.0)					// InteractiveSecondaryDark30
	SecondaryDark40							=> hsla(0, 0%, 1%, 1.0)					// InteractiveSecondaryDark40
	SecondaryDark50							=> hsla(0, 0%, 0%, 1.0)					// InteractiveSecondaryDark50
	Tertiary3								=> hsla(202, 76%, 19%, 0.03)			// InteractiveTertiary3
	Tertiary5								=> hsla(202, 76%, 19%, 0.05)			// InteractiveTertiary5
	Tertiary10								=> hsla(202, 76%, 19%, 0.10)			// InteractiveTertiary10
	Tertiary20								=> hsla(202, 76%, 19%, 0.20)			// InteractiveTertiary20
	Tertiary30								=> hsla(202, 76%, 19%, 0.30)			// InteractiveTertiary30
	Tertiary40								=> hsla(202, 76%, 19%, 0.40)			// InteractiveTertiary40
	Tertiary50								=> hsla(202, 76%, 19%, 0.50)			// InteractiveTertiary50
	Tertiary60								=> hsla(202, 76%, 19%, 0.60)			// InteractiveTertiary60
	Tertiary70								=> hsla(202, 76%, 19%, 0.70)			// InteractiveTertiary70
	Tertiary80								=> hsla(202, 76%, 19%, 0.80)			// InteractiveTertiary80
	Tertiary90								=> hsla(202, 76%, 19%, 0.90)			// InteractiveTertiary90
	Tertiary								=> hsla(202, 76%, 19%, 1.0)				// InteractiveTertiary
	TertiaryDark10							=> hsla(202, 76%, 14%, 1.0)				// InteractiveTertiaryDark10
	TertiaryDark20							=> hsla(202, 76%, 9%, 1.0)				// InteractiveTertiaryDark20
	TertiaryDark30							=> hsla(202, 76%, 4%, 1.0)				// InteractiveTertiaryDark30
	TertiaryDark40							=> hsla(202, 76%, 0%, 1.0)				// InteractiveTertiaryDark40

//  ═══  Visa  ═══
switch Visa
	Primary									=> #1434CB								// VisaBrandPrimary
	PrimaryLight							=> #3B57DE								// VisaBrandPrimaryLight
	PrimaryDark								=> #021E4C								// VisaBrandPrimaryDark
	Secondary								=> #FCC015								// VisaBrandSecondary
	SecondaryLight							=> #FFD700								// VisaBrandSecondaryLight
	SecondaryDark							=> #F7B600								// VisaBrandSecondaryDark
	Tertiary7								=> #2C2C2C								// VisaBrandTertiary7
	Tertiary6								=> #5C5C5C								// VisaBrandTertiary6
	Tertiary5								=> #979797								// VisaBrandTertiary5
	Tertiary4								=> #B9B9B9								// VisaBrandTertiary4
	Tertiary3								=> #DEDEDE								// VisaBrandTertiary3
	Tertiary2								=> #EEEEEE								// VisaBrandTertiary2
	Tertiary1								=> #F7F7F7								// VisaBrandTertiary1

//  ═══  Latam  ═══
switch Latam
	RedBackground							=> rgb(232, 17, 75)						// Latam Red Background

//  ═══  Arbe Robotics  ═══
switch Arbe Robotics
	Primary									=> #0035FF								// ArbePrimary
	PrimaryLight							=> #0640FF								// ArbePrimaryLight
	Secondary								=> #04ebff								// ArbeSecondary

//  ═══  AutoX  ═══
switch AutoX
	Primary									=> #2253F0								// AutoXPrimary
	PrimaryLight							=> #0050F9								// AutoXPrimaryLight
	Secondary								=> #75ebc0								// AutoXSecondary

//  ═══  EEG  ═══
switch EEG
	SkyBlue30								=> #01EBF9								// EEGSkyBlue30
	SkyBlue40								=> #00E7FD								// EEGSkyBlue40
	Fucsia40								=> #FF00B1								// EEGFucsia40
	Fucsia50								=> #FE0CB6								// EEGFucsia50

//  ═══  Bright Line  ═══
switch BrightLine
	BrYel10									=> #FBFD73								// BrightLineBackground Yellow Light
	BrYel20									=> #FFFD52								// BrightLineBackground Yellow Light
	BrYel30									=> #FDF43C								// BrightLineBackground Yellow High
	BrYel40									=> #FEF301								// BrightLineBackground Yellow Nit
	BrYel50									=> #FFDB00								// BrightLineBackground Yellow Base

//  ═══  TradingView  ═══
switch TradingV
	LightMenta50							=> #00ffd5								// TradingViewMenta
	LightGreen50							=> #33ffac								// TradingViewGreenNit
	Blue50									=> #0034c5								// TradingViewBlue
	LightYellow50							=> #eedd45								// TradingViewYellow
	NitRed40								=> #e91e63								// TradingViewRedLight
	LightBlueSky50							=> #12cef8								// TradingViewBlueSky

//  ═══  TFlab  ═══
switch TFlab
	Asia									=> #8bbcfc								// Lite TFlabAsia                        
	Sydney									=> #F0B884								// Lite TFlabSydney                      
	Tokyo									=> #0CC1C0								// Lite TFlabTokyo                       
	Shanghai								=> #ea1616								// Lite TFlabShanghai                    
	Euro									=> #BBE8B5								// Lite TFlabEuro                        
	London									=> #ACBBE8								// Lite TFlabLondon                      
	Newyork									=> #C5ACE8								// Lite TFlabNewyork                     
	NYSE									=> #87c2d4								// Lite TFlabNYSE                        

//  ═══  Ultr  ═══
switch Ultr
	BlueSky10								=> #59F2E9								// UltrBlueSky10
	BlueSky20								=> #39F0EA								// UltrBlueSky20
	Menta10									=> #E0F9EF								// UltrMenta10
	Menta20									=> #80F3EC								// UtlrMenta20
	Menta30									=> #7FFFD4								// UltrMenta30
	Menta40									=> #73FFCA								// UltrMenta40
	Rose20									=> #ffa3e3								// UltrRose
	Fucsia30								=> #ff6fd3								// UltrFucsia
	Lyla									=> #7E57C2								// UltrLyla
	LightGray								=> #787B86								// UltrLightGray
	RedNit									=> #de0011								// UltrRedNit

///////////////////////////////// 

plotOB						= input.bool	(defval = true,								title = 'Plot OB',							group = 'Order Blocks')
obBullColor					= input.color	(defval = color.new(color.green, 90),		title = 'Bullish OB Color',					inline = 'Set Custom Color',		group = 'Order Blocks')
obBearColor					= input.color	(defval = color.new(color.red, 90),			title = 'Bearish OB Color',					inline = 'Set Custom Color',		group = 'Order Blocks')
obBoxBorder					= input.string	(defval = line.style_solid,					title = 'OB Box Border Style',				options = [line.style_dashed, line.style_dotted, line.style_solid],		group = 'Order Blocks')
obBorderTransparency		= input.int		(defval = 80,								title = 'OB Border Box Transparency',		minval = 0,		maxval = 100,		group = 'Order Blocks')
obMaxBoxSet					= input.int		(defval = 10,								title = 'Maximum OB Box Displayed',			minval = 1,		maxval = 100,		group = 'Order Blocks')
filterMitOB					= input.bool	(defval = false,							title = 'Custom Color Mitigated OB',		group = 'Order Blocks')
mitOBColor					= input.color	(defval = color.new(color.gray, 90),		title = 'Mitigated OB Color', 				group = 'Order Blocks',				inline = 'Set Custom Color Mit OB')

plotFVG						= input.bool	(defval = true,								title = 'Plot FVG',							group = 'Fair Value Gaps',			inline = 'FVG sets')
plotStructureBreakingFVG	= input.bool	(defval = true,								title = 'Plot Structure Breaking FVG',		group = 'Fair Value Gaps',			inline = 'FVG sets')
fvgBullColor				= input.color	(defval = color.new(color.black, 90),		title = 'Bullish FVG Color',				inline = 'Set Custom Color',		group = 'Fair Value Gaps')
fvgBearColor				= input.color	(defval = color.new(color.black, 90),		title = 'Bearish FVG Color',				inline = 'Set Custom Color',		group = 'Fair Value Gaps')
fvgStructBreakingColor		= input.color	(defval = color.new(color.blue, 90),		title = 'Structure Breaking FVG Color',		inline = 'Set Custom Color',		group = 'Fair Value Gaps')
fvgBoxBorder				= input.string	(defval = line.style_solid,					title = 'FVG Box Border Style',				options = [line.style_dashed, line.style_dotted, line.style_solid],		group = 'Fair Value Gaps')
fvgBorderTransparency		= input.int		(defval = 80,								title = 'FVG Border Box Transparency',		minval = 0, maxval = 100,			group = 'Fair Value Gaps')
fvgMaxBoxSet				= input.int		(defval = 10,								title = 'Maximum FVG Box Displayed',		minval = 1, maxval = 100,			group = 'Fair Value Gaps')
filterMitFVG				= input.bool	(defval = false,							title = 'Custom Color Mitigated FVG',		group = 'Fair Value Gaps')
mitFVGColor					= input.color	(defval = color.new(color.gray, 90),		title = 'Mitigated FVG Color',				group = 'Fair Value Gaps',			inline = 'Set Custom Color Mit FVG')

plotRJB						= input.bool	(defval = false,							title = 'Plot RJB',							group = 'Rejection Blocks',			inline = 'RJB sets')
rjbBullColor				= input.color	(defval = color.new(color.green, 90),		title = 'Bullish RJB Color',				inline = 'Set Custom Color',		group = 'Rejection Blocks')
rjbBearColor				= input.color	(defval = color.new(color.red, 90),			title = 'Bearish RJB Color',				inline = 'Set Custom Color',		group = 'Rejection Blocks')
rjbBoxBorder				= input.string	(defval = line.style_solid,					title = 'RJB Box Border Style',				options = [line.style_dashed, line.style_dotted, line.style_solid],	group = 'Rejection Blocks')
rjbBorderTransparency		= input.int		(defval = 80,								title = 'RJB Border Box Transparency',		minval = 0, maxval = 100,			group = 'Rejection Blocks')
rjbMaxBoxSet				= input.int		(defval = 10,								title = 'Maximum RJB Box Displayed',		minval = 1, maxval = 100,			group = 'Rejection Blocks')
filterMitRJB				= input.bool	(defval = false,							title = 'Custom Color Mitigated RJB',		group = 'Rejection Blocks')
mitRJBColor					= input.color	(defval = color.new(color.gray, 90),		title = 'Mitigated RJB Color',				group = 'Rejection Blocks',			inline = 'Set Custom Color Mit RJB')

plotPVT						= input.bool	(defval = true,								title = 'Plot Pivots',						group = 'Pivots')
pivotLookup 				= input.int		(defval = 1,								title='Pivot Lookup',	minval = 1,		maxval = 5,				group = 'Pivots',	tooltip = 'Minimum = 1, Maximum = 5')
pvtTopColor					= input.color	(defval = color.new(color.silver, 0),		title = 'Pivot Top Color',					group = 'Pivots',	inline = 'PVT Color')
pvtBottomColor				= input.color	(defval = color.new(color.silver, 0),		title = 'Pivot Bottom Color',				group = 'Pivots',	inline = 'PVT Color')

plotBOS						= input.bool	(defval = false,							title = 'Plot BoS',							group = 'Crossovers',		inline = 'BOS sets')
useHighLowForBullishBoS		= input.bool	(defval = false,							title = 'Use High/Low for Bullish BoS (for Bearish setup)',			group = 'Crossovers')
useHighLowForBearishBoS		= input.bool	(defval = false,							title = 'Use High/Low for Bearish BoS (for Bullish setup)',			group = 'Crossovers')
bosBoxFlag 					= input.bool	(defval = false,							title='BoS Box Length Manually',			group='Crossovers')
bosBoxLength 				= input.int		(defval = 3,								title='BoS Box Length Manually',			minval=1,		maxval=5,			group='Crossovers',				inline='BoS Boxes')
bosBullColor				= input.color	(defval = color.new(color.green, 90),		title = 'Bullish BoS Color',				inline = 'Set Custom Color',		group='Crossovers')
bosBearColor				= input.color	(defval = color.new(color.red, 90),			title = 'Bearish BoS Color',				inline = 'Set Custom Color',		group='Crossovers')
bosBoxBorder				= input.string	(defval = line.style_solid,					title = 'BoS Box Border Style',				options = [line.style_dashed, line.style_dotted, line.style_solid],		group='Crossovers')
bosBorderTransparency		= input.int		(defval = 80,								title = 'BoS Border Box Transparency',		minval = 0,		maxval = 100,		group='Crossovers')
bosMaxBoxSet				= input.int		(defval = 10,								title = 'Maximum BoS Box Displayed',		minval = 1,		maxval = 100,		group='Crossovers')

plotHVB						= input.bool	(defval = true,								title = 'Plot HVB',							group = 'High Volume Bar')
hvbBullColor				= input.color	(defval = color.green,						title = 'Bullish HVB Color',				inline = 'Set Custom Color',		group='High Volume Bar')
hvbBearColor				= input.color	(defval = color.red,						title = 'Bearish HVB Color',				inline = 'Set Custom Color',		group='High Volume Bar')
hvbEMAPeriod				= input.int		(defval = 12, minval=1,						title = 'Volume EMA Period',				group = 'High Volume Bar')
hvbMultiplier				= input.float	(defval = 1.5,								title = 'Volume Multiplier',				minval = 1,		maxval = 100,		group = 'High Volume Bar')

plotPPDD					= input.bool	(defval = true,								title = "Plot PPDD OB's",					group='Qualitative indicators')
ppddBullColor				= input.color	(defval = color.new(color.green, 0),		title = "Bullish PPDD OB's Color",			group='Qualitative indicators',		inline = 'PPDD Color')
ppddBearColor				= input.color	(defval = color.new(color.red, 0),			title = "Bearish PPDD OB's Color",			group='Qualitative indicators',		inline = 'PPDD Color')

plotOBFVG					= input.bool	(defval = true,								title = 'Plot Stacked OB+FVG',				group='Qualitative indicators')
obfvgBullColor				= input.color	(defval = color.new(color.green, 0),		title = 'Bullish Stacked OB+FVG Color',		group='Qualitative indicators',		inline = 'OBFVG Color')
obfvgBearColor				= input.color	(defval = color.new(color.red, 0),			title = 'Bearish Stacked OB+FVG Color',		group='Qualitative indicators',		inline = 'OBFVG Color')

plotLabelOB					= input.bool	(defval = true,								title = 'Plot OB Label',					inline = 'OB label',				group = 'Label Options')
obLabelColor				= input.color	(defval = color.gray,						title = 'Color',							inline = 'OB label',				group = 'Label Options')
obLabelSize					= input.string	(defval = size.tiny,						title = "Size", options = [size.huge, size.large, size.small, size.tiny, size.auto, size.normal],				inline = 'OB label',		group = 'Label Options')

plotLabelFVG				= input.bool	(defval = true,								title = 'Plot FVG Label',					inline = 'FVG label',				group = 'Label Options')
fvgLabelColor				= input.color	(defval = color.gray,						title = 'Color',							inline = 'FVG label',				group = 'Label Options')
fvgLabelSize				= input.string	(defval = size.tiny,						title = "Size", options = [size.huge, size.large, size.small, size.tiny, size.auto, size.normal],				inline = 'FVG label',		group = 'Label Options')

plotLabelRJB				= input.bool	(defval = true,								title = 'Plot RJB Label',					inline = 'RJB label',				group = 'Label Options')
rjbLabelColor				= input.color	(defval = color.gray,						title = 'Color',							inline = 'RJB label',				group = 'Label Options')
rjbLabelSize				= input.string	(defval = size.tiny,						title = "Size", options = [size.huge, size.large, size.small, size.tiny, size.auto, size.normal],				inline = 'RJB label',		
group = 'Label Options')

plotLabelBOS				= input.bool	(defval = true,								title = 'Plot BoS Label',					inline = 'BOS label',				group = 'Label Options')
bosLabelColor				= input.color	(defval = color.gray,						title = 'Color',							inline = 'BOS label',				group = 'Label Options')
bosLabelSize				= input.string	(defval = size.tiny,						title = "Size", options = [size.huge, size.large, size.small, size.tiny, size.auto, size.normal],				inline = 'BOS label',		group = 'Label Options')

//Box Types
var int _ob  = 1
var int _fvg = 2
var int _rjb = 3
var int _bos = 4

//Box Labels
var string _obLabel  = "OB"
var string _fvgLabel = "FVG"
var string _rjbLabel = "RJB"
var string _bosLabel = "BoS"
var string _plus     = "+"
var string _minus    = "-"
var string _empty    = ""

//Box Arrays
var box[] _bearBoxesOB  = array.new_box()
var box[] _bullBoxesOB  = array.new_box()
var box[] _bearBoxesFVG = array.new_box()
var box[] _bullBoxesFVG = array.new_box()
var box[] _bearBoxesRJB = array.new_box()
var box[] _bullBoxesRJB = array.new_box()
var box[] _bearBoxesBOS = array.new_box()
var box[] _bullBoxesBOS = array.new_box()

//Functions
isUp(index) =>
	close[index] > open[index]

isDown(index) =>
	close[index] < open[index]

isObUp(index) =>
	isDown(index + 1) and isUp(index) and close[index] > high[index + 1]

isObDown(index) =>
	isUp(index + 1) and isDown(index) and close[index] < low[index + 1]

isFvgUp(index) =>
	(low[index] > high[index + 2])

isFvgDown(index) =>
	(high[index] < low[index + 2])

//Function to Calculte Box Length
_controlBox(_boxes, _high, _low, _type) =>
	if array.size(_boxes) > 0
		for i = array.size(_boxes) - 1 to 0 by 1
			_box = array.get(_boxes, i)
			_boxLow = box.get_bottom(_box)
			_boxHigh = box.get_top(_box)
			_boxRight = box.get_right(_box)
			if bosBoxFlag and _type == _bos
				if na or (bar_index + bosBoxLength - 1 == _boxRight and not((_high > _boxLow and _low < _boxLow) or (_high > _boxHigh and _low < _boxHigh)))
					box.set_right(_box, bar_index + bosBoxLength - 1)
			else if (filterMitOB and _type == _ob) or (filterMitFVG and _type == _fvg) or (filterMitRJB and _type == _rjb)
				if na or (bar_index == _boxRight and not((_high > _boxLow and _low < _boxLow) or (_high > _boxHigh and _low < _boxHigh)))
					box.set_right(_box, bar_index + 1)
				else
					if _type == _ob
						box.set_bgcolor(_box, mitOBColor)
						box.set_border_color(_box, mitOBColor)
					else if _type == _fvg
						box.set_bgcolor(_box, mitFVGColor)
						box.set_border_color(_box, mitFVGColor)
					else if _type == _rjb
						box.set_bgcolor(_box, mitRJBColor)
						box.set_border_color(_box, mitRJBColor)
			else
				if na or (bar_index == _boxRight and not((_high > _boxLow and _low < _boxLow) or (_high > _boxHigh and _low < _boxHigh)))
					box.set_right(_box, bar_index + 1)

//////////////////// Pivots //////////////////// 
hih = ta.pivothigh(high, pivotLookup, pivotLookup)
lol = ta.pivotlow(low , pivotLookup, pivotLookup)
top = ta.valuewhen(hih, high[pivotLookup], 0)
bottom = ta.valuewhen(lol, low [pivotLookup], 0)
plot(top, offset=-pivotLookup, linewidth=1, color=(top != top[1] ? na : (plotPVT ? pvtTopColor : na)), title="Pivot Top")
plot(bottom, offset=-pivotLookup, linewidth=1, color=(bottom != bottom[1] ? na : (plotPVT ? pvtBottomColor : na)), title="Pivot Bottom")

//////////////////// Order Block //////////////////
//Bullish OB Box Plotting
if isObUp(1) and plotOB
	_bullboxOB = box.new(left=bar_index - 2, top=high[2], right=bar_index, bottom=math.min(low[2], low[1]), border_color=color.new(obBullColor, obBorderTransparency), border_style=obBoxBorder, border_width=1, bgcolor=obBullColor, 
	 text=plotLabelOB ? _obLabel  + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=obLabelSize, text_color=obLabelColor)
	if array.size(_bullBoxesOB) > obMaxBoxSet
		box.delete(array.shift(_bullBoxesOB))
	array.push(_bullBoxesOB, _bullboxOB)

//Bearish OB Box Plotting
if isObDown(1) and plotOB
	_bearboxOB = box.new(left=bar_index - 2, top=math.max(high[2], high[1]), right=bar_index, bottom=low[2], border_color=color.new(obBearColor, obBorderTransparency), border_style=obBoxBorder, border_width=1, bgcolor=obBearColor, 
	 text=plotLabelOB ? _obLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=obLabelSize, text_color=obLabelColor)
	if array.size(_bearBoxesOB) > obMaxBoxSet
		box.delete(array.shift(_bearBoxesOB))
	array.push(_bearBoxesOB, _bearboxOB)
	
if plotOB
	_controlBox(_bearBoxesOB, high, low, _ob)
	_controlBox(_bullBoxesOB, high, low, _ob)

//////////////////// Fair Value Gap //////////////////
//Bullish FVG Box Plotting
if isFvgUp(0)
	box _bullboxFVG = na
	if plotStructureBreakingFVG and (close[1] > top) and (low[1] < top) and (high[2] < top) and (low > top)
		_bullboxFVG := box.new(left=bar_index-2, top=low[0], right=bar_index, bottom=high[2], bgcolor=fvgStructBreakingColor, border_color=color.new(fvgStructBreakingColor, fvgBorderTransparency), border_style=fvgBoxBorder, border_width=1,
		 text=plotLabelFVG ? _fvgLabel  + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=fvgLabelSize, text_color=fvgLabelColor)        
	else if plotFVG   
		_bullboxFVG := box.new(left=bar_index-2, top=low[0], right=bar_index, bottom=high[2], bgcolor=fvgBullColor, border_color=color.new(fvgBullColor, fvgBorderTransparency), border_style=fvgBoxBorder, border_width=1,
		 text=plotLabelFVG ? _fvgLabel  + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=fvgLabelSize, text_color=fvgLabelColor)    
	if array.size(_bullBoxesFVG) > fvgMaxBoxSet
		box.delete(array.shift(_bullBoxesFVG))
	array.push(_bullBoxesFVG, _bullboxFVG)

//Bearish FVG Box Plotting    
if isFvgDown(0)
	box _bearboxFVG = na
	if plotStructureBreakingFVG and (close[1] < bottom) and (high[1] > bottom) and (low[2] > bottom) and (high < bottom)
		_bearboxFVG := box.new(left=bar_index-2, top=low[2], right=bar_index, bottom=high[0], bgcolor=fvgStructBreakingColor, border_color=color.new(fvgStructBreakingColor, fvgBorderTransparency), border_style=fvgBoxBorder, border_width=1,
		 text=plotLabelFVG ? _fvgLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=fvgLabelSize, text_color=fvgLabelColor)    
	else if plotFVG
		_bearboxFVG := box.new(left=bar_index-2, top=low[2], right=bar_index, bottom=high[0], bgcolor=fvgBearColor, border_color=color.new(fvgBearColor, fvgBorderTransparency), border_style=fvgBoxBorder, border_width=1,
		 text=plotLabelFVG ? _fvgLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=fvgLabelSize, text_color=fvgLabelColor)    
	if array.size(_bearBoxesFVG) > fvgMaxBoxSet
		box.delete(array.shift(_bearBoxesFVG))
	array.push(_bearBoxesFVG, _bearboxFVG)
	
if plotFVG or plotStructureBreakingFVG
	_controlBox(_bearBoxesFVG, high, low, _fvg)
	_controlBox(_bullBoxesFVG, high, low, _fvg)

//////////////////// Rejection Block //////////////////
if plotRJB
	isDownRjbObCondition = isObDown(1)
	isDownRjb1 = isDownRjbObCondition and  (high[1] < (close[2] + 0.2*(high[2]-close[2]))) // RJB is on trapped's wick and <50% of the wick was covered by signal
	isDownRjb2 = isDownRjbObCondition and (high[1] > high[2]) // RJB is on signal's wick
	if isDownRjb1 and plotRJB
		_bearboxRJB = box.new(left=bar_index-2, top=high[2], right=bar_index, bottom=close[2], bgcolor=rjbBearColor, border_color=color.new(rjbBearColor, rjbBorderTransparency), border_style=rjbBoxBorder, border_width=1,
		 text=plotLabelRJB ? _rjbLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=rjbLabelSize, text_color=rjbLabelColor)
		if array.size(_bearBoxesRJB) > rjbMaxBoxSet
			box.delete(array.shift(_bearBoxesRJB))
		array.push(_bearBoxesRJB, _bearboxRJB)
		
	if isDownRjb2 and plotRJB
		_bearboxRJB = box.new(left=bar_index-1, top=high[1], right=bar_index, bottom=open[1], bgcolor=rjbBearColor, border_color=color.new(rjbBearColor, rjbBorderTransparency), border_style=rjbBoxBorder, border_width=1,
		 text=plotLabelRJB ? _rjbLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=rjbLabelSize, text_color=rjbLabelColor)
		if array.size(_bearBoxesRJB) > rjbMaxBoxSet
			box.delete(array.shift(_bearBoxesRJB))
		array.push(_bearBoxesRJB, _bearboxRJB)

//Bullish RJB Box Plotting
if plotRJB
	isUpRjbObCondition = isObUp(1)
	isUpRjb1 = isUpRjbObCondition and (low[1] > (close[2] - 0.2*(close[2]-low[2]))) // RJB is on trapped's wick and <50% of the wick was covered by signal
	isUpRjb2 = isUpRjbObCondition and (low[1] < low[2]) // RJB is on signal's wick
	if isUpRjb1 and plotRJB
		_bullboxRJB = box.new(left=bar_index-2, top=close[2], right=bar_index, bottom=low[2], bgcolor=rjbBullColor, border_color=color.new(rjbBullColor, rjbBorderTransparency), border_style=rjbBoxBorder, border_width=1,
		 text=plotLabelRJB ? _rjbLabel  + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=rjbLabelSize, text_color=rjbLabelColor)
		if array.size(_bullBoxesRJB) > rjbMaxBoxSet
			box.delete(array.shift(_bullBoxesRJB))
		array.push(_bullBoxesRJB, _bullboxRJB)
	
	if isUpRjb2 and plotRJB
		_bullboxRJB = box.new(left=bar_index-1, top=open[1], right=bar_index, bottom=low[1], bgcolor=rjbBullColor, border_color=color.new(rjbBullColor, rjbBorderTransparency), border_style=rjbBoxBorder, border_width=1, 
		 text=plotLabelRJB ? _rjbLabel  + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=rjbLabelSize, text_color=rjbLabelColor)
		if array.size(_bullBoxesRJB) > rjbMaxBoxSet
			box.delete(array.shift(_bullBoxesRJB))
		array.push(_bullBoxesRJB, _bullboxRJB)

if plotRJB
	_controlBox(_bearBoxesRJB, high, low, _rjb)
	_controlBox(_bullBoxesRJB, high, low, _rjb)

//////////////////// Crossovers a.k.a. Break of Structure ////////////////////
//Bullish BOS Box Plotting
if plotBOS
	if ta.crossover(useHighLowForBullishBoS ? high : close, top)
		_bullboxBOS = box.new(left=bar_index, top=top, right=bosBoxFlag ? bar_index+bosBoxLength : bar_index+1, bottom=bottom, bgcolor=bosBullColor, border_color=color.new(bosBullColor, bosBorderTransparency), border_style=bosBoxBorder, border_width=1, 
		 text=plotLabelBOS ? _bosLabel + _plus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=bosLabelSize, text_color=bosLabelColor)
		if array.size(_bullBoxesBOS) > bosMaxBoxSet
			box.delete(array.shift(_bullBoxesBOS))
		array.push(_bullBoxesBOS, _bullboxBOS)

//Bearish BOS Box Plotting        
if plotBOS 
	if ta.crossunder(useHighLowForBearishBoS ? low : close, bottom)
		_bearboxBOS = box.new(left=bar_index, top=top, right=bosBoxFlag ? bar_index+bosBoxLength : bar_index+1, bottom=bottom, bgcolor=bosBearColor, border_color=color.new(bosBearColor, bosBorderTransparency), border_style=bosBoxBorder, border_width=1, 
		 text=plotLabelBOS ? _bosLabel  + _minus : _empty, text_halign=text.align_right, text_valign=text.align_bottom, text_size=bosLabelSize, text_color=bosLabelColor)
		if array.size(_bearBoxesBOS) > bosMaxBoxSet
			box.delete(array.shift(_bearBoxesBOS))
		array.push(_bearBoxesBOS, _bearboxBOS)

if plotBOS
	_controlBox(_bearBoxesBOS, high, low, _bos)
	_controlBox(_bullBoxesBOS, high, low, _bos)

//////////////////// Premium Premium & Discount Discount //////////////////

premiumPremium = plotPPDD and isObDown(0) and ((math.max(high, high[1]) > top and close < top) or (math.max(high, high[1]) > top[1] and close < top[1]))
discountDiscount = plotPPDD and isObUp(0) and ((math.min(low, low[1]) < bottom and close > bottom) or (math.min(low, low[1]) < bottom[1] and close > bottom[1]))
plotshape(premiumPremium, "Bearish PPDD OB", style=shape.triangledown , location=location.abovebar, color=ppddBearColor, size=size.tiny)
plotshape(discountDiscount, "Bullish PPDD OB", style=shape.triangleup , location=location.belowbar, color=ppddBullColor, size=size.tiny)

premiumPremium1 = plotPPDD and (isUp(1) and isDown(0) and close[0] < open[1]) and ((math.max(high, high[1]) > top and close < top) or (math.max(high, high[1]) > top[1] and close < top[1])) and not premiumPremium
discountDiscount1 = plotPPDD and (isDown(1) and isUp(0) and close[0] > open[1]) and ((math.min(low, low[1]) < bottom and close > bottom) or (math.min(low, low[1]) < bottom[1] and close > bottom[1])) and not discountDiscount
plotshape(premiumPremium1, "Bearish PPDD Weak OB", style=shape.xcross, location=location.abovebar, color=ppddBearColor, size=size.tiny)
plotshape(discountDiscount1, "Bullish PPDD Weak OB", style=shape.xcross, location=location.belowbar, color=ppddBullColor, size=size.tiny)

////////////////// High Volume Bars //////////////////
volEma = ta.ema(volume, hvbEMAPeriod)
isHighVolume = volume > (hvbMultiplier * volEma)
barcolor(plotHVB and isUp(0) and isHighVolume ? hvbBullColor : na, title="Bullish HVB")
barcolor(plotHVB and isDown(0) and isHighVolume ? hvbBearColor : na, title="Bearish HVB")

///////////////// Stacked OB + FVG //////////////////
plotshape(plotOBFVG and isFvgDown(0) and isObDown(1), "Bearish OB+FVG Stack", style=shape.diamond, location=location.abovebar, color=obfvgBearColor, size=size.tiny)
plotshape(plotOBFVG and isFvgUp(0) and isObUp(1), "Bullish OB+FVG Stack", style=shape.diamond, location=location.belowbar, color=obfvgBullColor, size=size.tiny)